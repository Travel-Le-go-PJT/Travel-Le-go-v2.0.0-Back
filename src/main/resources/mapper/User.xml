<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.ssafy.travellego.user.model.mapper.UserMapper">
	<resultMap type="userDto" id="user">
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
		<result column="user_password" property="userPwd" />
		<result column="email_id" property="emailId" />
		<result column="email_domain" property="emailDomain" />
		<result column="join_date" property="joinDate" />
		<result column="user_role" property="userRole" />
	</resultMap>


	<select id="IdDuplicateCheck" parameterType="String" resultType="int">
		select
		count(user_id)
		from user
		where user_id = #{userId}
	</select>

	<insert id="joinUser" parameterType="userDto">
		insert into user
		(user_name, user_id, user_password, email_id, email_domain, join_date,
		user_role)
		values (#{userName}, #{userId}, #{userPwd}, #{emailId},
		#{emailDomain}, now(), 1)
	</insert>

	<select id="loginUser" parameterType="userDto"
		resultMap="user">
		select user_id, user_name, user_role
		from user
		where user_id = #{userId} and user_password = #{userPwd}
	</select>

	<select id="userList" resultMap="user">
		select * from user where
		user_role=1
	</select>

	<select id="getUser" parameterType="string" resultMap="user">
		select *
		from user where user_id = #{userId}
	</select>

	<update id="modifyUser" parameterType="userDto">
		update user
		set user_name = #{userName} , email_id = #{emailId},
		email_domain=#{emailDomain} where user_id = #{userId}

	</update>

	<delete id="deleteUser" parameterType="String">
		delete from user
		where user_id = #{userId}
	</delete>


	<select id="getRefreshToken" parameterType="string"
		resultType="string">
		select token
		from user
		where user_id = #{userId}
	</select>

	<update id="saveRefreshToken" parameterType="map">
		update user
		set token = #{token}
		where user_id = #{userId}
	</update>

	<update id="deleteRefreshToken" parameterType="map">
		update
		user
		set token = #{token}
		where user_id =
		#{userId}
	</update>

</mapper>