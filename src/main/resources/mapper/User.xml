<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.travellego.user.model.mapper.UserMapper">
	<resultMap type="userDto" id="user">
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
		<result column="user_password" property="userPwd" />
		<result column="email_id" property="emailId" />
		<result column="email_domain" property="emailDomain" />
		<result column="join_date" property="joinDate" />
		<result column="user_role" property="userRole" />
	</resultMap>


	<select id="iSDuplicate" parameterType="String" resultType="int">
		select
		count(user_id)
		from user
		where user_id = #{userId}
	</select>

	<insert id="joinUser" parameterType="userDto">
		insert into user
		(user_name, user_id, user_password, email_id, email_domain, join_date,
		user_role)
		values (#{userName}, #{userId}, #{userPwd}, #{emailId},
		#{emailDomain}, now(), 1)
	</insert>
	
	<update id="updateJoinUser" parameterType="userDto">
		update user
		set user_name = #{userName}, user_password = #{userPwd},email_id=#{emailId},email_domain=#{emailDomain},join_date = now(), user_role=1
        where user_id = #{userId}
	</update>
	

	<select id="loginUser" parameterType="userDto"
		resultMap="user">
		select user_id, user_name, user_role
		from user
		where user_id = #{userId} and user_password = #{userPwd}
	</select>

	<select id="userList" resultMap="user">
		select * from user where
		user_role=1
	</select>

	<select id="getUser" parameterType="string" resultMap="user">
		select *
		from user where user_id = #{userId}
	</select>

	<update id="modifyUser" parameterType="userDto">
		update user
		set user_name = #{userName} , email_id = #{emailId},
		email_domain=#{emailDomain} where user_id = #{userId}

	</update>

	<select id="getRefreshToken" parameterType="string"
		resultType="string">
		select token
		from user
		where user_id = #{userId}
	</select>

	<update id="saveRefreshToken" parameterType="map">
		update user
		set token = #{token}
		where user_id = #{userId}
	</update>

	<update id="deleteRefreshToken" parameterType="map">
		update
		user
		set token = #{token}
		where user_id =
		#{userId}
	</update>


	<update id="userWithdraw" parameterType="string">
		update user
		set user_role=0
		where user_id = #{userId}
	</update>

	<delete id="deleteFavorite" parameterType="String">
		delete from trip_plan_favorite
		where user_id = #{userId}
	</delete>
	
	<update id="changeFromInfoToNone" parameterType="string">
		update trip_info_board
		set trip_info_user_id="알수없음"
		where trip_info_user_id = #{userId}
	</update>
	
	<update id="changeFromPlanToNone" parameterType="string">
		update trip_plan_board
		set trip_plan_user_id="알수없음"
		where trip_plan_user_id = #{userId}
	</update>
	
	<select id="checkRole" parameterType="string"
		resultType="int">
		select user_role
		from user
		where user_id = #{userId}
	</select>
	
	<select id="countInfoAricle" parameterType="String" resultType="int">
		select
		count(*)
		from trip_info_board
		where trip_info_user_id = #{userId}
	</select>
	
	<select id="countPlanAricle" parameterType="String" resultType="int">
		select
		count(*)
		from trip_plan_board
		where trip_plan_user_id = #{userId}
	</select>
	
</mapper>